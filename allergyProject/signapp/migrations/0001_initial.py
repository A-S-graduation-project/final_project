# Generated by Django 4.2.4 on 2023-10-14 05:21

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('searchapp', '0001_initial'),
        ('board', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cno', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=16, unique=True)),
                ('email', models.EmailField(max_length=40)),
                ('phone', models.CharField(max_length=16)),
                ('password', models.TextField()),
                ('birthdate', models.DateField()),
                ('gender', models.BooleanField()),
                ('bookinfo', models.TextField(blank=True, null=True)),
                ('boardinfo', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'customers',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FBookmark',
            fields=[
                ('FMNO', models.AutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=100)),
                ('CDATE', models.DateField(default=datetime.date.today)),
                ('CNO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('FNO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searchapp.product')),
            ],
            options={
                'db_table': 'fbookmark',
            },
        ),
        migrations.CreateModel(
            name='BBookmark',
            fields=[
                ('BMNO', models.AutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=100)),
                ('CDATE', models.DateField(default=datetime.date.today)),
                ('CNO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bNO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.board')),
            ],
            options={
                'db_table': 'bbookmark',
            },
        ),
    ]
